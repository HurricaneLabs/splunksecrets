[tox]
envlist = py27,
          py35,
          linters,
          coverage

[travis]
python =
  2.7: py27
  3.5: py35, linters

###
# Base - run some tests
###

[testenv]
whitelist_externals = bash
                      mv
deps = nose2
       cov-core
usedevelop = true
commands = bash -c "if [ ! -d .coverage_data ]; then mkdir .coverage_data; fi"
           coverage run -a --rcfile={toxinidir}/.coveragerc -m nose2 -v
           mv {toxinidir}/.coverage {toxinidir}/.coverage_data/.coverage.{envname}

###
# Test Coverage
###

[testenv:coverage]
deps = cov-core
skip_install = true
commands = bash -c "if [ -d .coverage_data ]; then coverage combine .coverage_data ; rmdir .coverage_data ; fi"
           coverage report --rcfile={toxinidir}/.coveragerc

###
# Code Quality
###

[testenv:linters]
deps = {[testenv:pylint]deps}
       {[testenv:flake8]deps}
       {[testenv:bandit]deps}
commands: {[testenv:pylint]commands}
          {[testenv:flake8]commands}
          {[testenv:bandit]commands}

[testenv:pylint]
deps = pyflakes
       pylint
commands = pylint --reports=n --rcfile={toxinidir}/pylint.rc splunksecrets.py

[testenv:flake8]
deps = flake8
       flake8-quotes
       flake8-import-order
skip_install = true
commands = flake8 splunksecrets.py tests.py

[flake8]
# max-complexity = 15
# ignore = F403
inline-quotes = "
exclude = .coverage_data,.tox,dist
max-line-length = 120
import-order-style = smarkets
application-import-names = splunksecrets

[testenv:bandit]
deps = bandit
skip_install = true
commands = bandit -r -c {toxinidir}/.bandit.yml splunksecrets.py
